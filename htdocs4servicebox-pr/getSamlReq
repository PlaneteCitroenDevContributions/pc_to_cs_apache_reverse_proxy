#! /bin/bash

# -*- mode: shell-script -*-

if [[ -r "${0}.env.secret" ]]
then
    source "${0}.env.secret"
fi

: ${TRACE_DIR:="/var/pc_debug/$( basename "$0" )_$$"}
if [[ ! -d "${TRACE_DIR}" ]]
then
    mkdir -p "${TRACE_DIR}"
fi

if [[ -n "${DO_NO_REDIRECT_STDERR}" ]]
then
    _redirect_stderr=false
else
    _redirect_stderr=true
fi

if ${_redirect_stderr}
then
    exec 2>"${TRACE_DIR}/stderr.log"
fi


trace ()
{
    echo "$@" | while read -r line
    do
       echo '===> '"${line}" 1>&2
    done
}

trace '=============================================================================='
trace "$( date )"
trace "$( env )"
trace '=============================================================================='

HERE=$( dirname "$0" )

urlencode() {
    # urlencode <string>

    old_lc_collate=$LC_COLLATE
    LC_COLLATE=C

    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:$i:1}"
        case $c in
            [a-zA-Z0-9.~_-])
		printf '%s' "$c"
		;;
            *)
		printf '%%%02X' "'$c"
		;;
        esac
    done

    LC_COLLATE=$old_lc_collate
}

getHeaderValueFor ()
{
    header_regexpr_pattern="$1"

    line_containing_header=$(
	grep \
	    --ignore-case \
	    --regexp="${header_regexpr_pattern}:"
			 )

    header_value=$(
	echo "${line_containing_header}" | \
	    sed -n -e 's/[^:]*:[ \t]*\(.*\)$/\1/p'
		)

    echo "${header_value}"
}


#
# global definitions
#

: ${PUBLIC_SERVICE_BOX_ROOT_URL:='https://public.servicebox-parts.com/'}

if [[ -z "${HTTP_USER_AGENT}" ]]
then
    USERAGENT='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0'
else
    USERAGENT="${HTTP_USER_AGENT}"
fi

#
# Starts to get all params whith the aim to login in
#

#
# get SAML Auth
# -------------
#

# get JSESSIONID PSACOUNTRY & BIGIPSERVER cookies

_old_IFS="${IFS}"
IFS=';, ';
for i in ${HTTP_COOKIE}
do
    case "${i}" in
	JSESSIONID\=* )
	    SET_JSESSIONID="${i}"
	    ;;
	PSACountry\=* )
	    SET_PSA_COUNTRY="${i}"
	    ;;

	 BIGipServer* )
	    SET_BIGIPSERVER="${i}"
	    ;;

	* )
	    ;;
    esac
done
IFS="${_old_IFS}"

trace "Has SET_JSESSIONID: ${SET_JSESSIONID}"
trace "Has SET_PSA_COUNTRY: ${SET_PSA_COUNTRY}"
trace "Has SET_BIGIPSERVER: ${SET_BIGIPSERVER}"


HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		-X POST \
		--cookie "${SET_BIGIPSERVER}" \
		--cookie "${SET_PSA_COUNTRY}" \
 		--cookie "${SET_JSESSIONID}" \
 		-d '' \
 		"${PUBLIC_SERVICE_BOX_ROOT_URL}/getSamlReq" \
		| \
		sed -e 's/\r$//'
	)

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_getSamlReq_response.txt"

GIGYAURL=$( echo "${HTTP_REQ}" | getHeaderValueFor 'gigyaUrl' )

APIKEY=$( echo "${GIGYAURL}" | sed -n -e 's|.*/v2.0/\([^/]*\)/.*$|\1|p' )

SAMLREQUEST=$( echo "${HTTP_REQ}" | getHeaderValueFor 'SAMLRequest' )
SAMLREQUEST_ENCODED=$( urlencode "${SAMLREQUEST}" )

SAMLLOGOUTREQUEST=$( echo "${HTTP_REQ}" | getHeaderValueFor 'SAMLLogoutRequest' )

trace "My GIGYAURL: ${GIGYAURL}"
trace "My APIKEY: ${APIKEY}"
trace "My SAMLREQUEST: ${SAMLREQUEST}"
trace "My SAMLREQUEST_ENCODED: ${SAMLREQUEST_ENCODED}"

#
# call GIGYAURL
# =============
#

# FIXME: is --location needed???

HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		-X GET \
		--location \
		"${GIGYAURL}"'?SAMLRequest='"${SAMLREQUEST_ENCODED}" \
		| \
		sed -e 's/\r$//'
	)

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_GIGYAURL_followed_response.txt"

_locationHeader=$( echo "${HTTP_REQ}" | getHeaderValueFor 'location' )
SAMLCONTEXT=$( echo "${_locationHeader}" | sed -n -e 's/.*&samlContext=\([^&]*\).*/\1/p' )

trace "My SAMLCONTEXT: ${SAMLCONTEXT}"


#
# call https://login-ra.fiat.com/accounts.webSdkBootstrap
# =======================================================
#

HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		-X GET 'https://login-ra.fiat.com/accounts.webSdkBootstrap?apiKey='"${APIKEY}"'&pageURL='"${GIGYAURL}"'?SAMLRequest='"${SAMLREQUEST}"'&sdk=js_latest&sdkBuild=16506&format=json' \
		| \
		sed -e 's/\r$//'
	)

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_webSdkBootstrap_response.txt"

GMID=$(echo "${HTTP_REQ}" | sed -n -e '/^[sS]et-[cC]ookie:.*gmid=/s/[^=]*=\([^;]*\);.*$/\1/p')
UCID=$(echo "${HTTP_REQ}" | sed -n -e '/^[sS]et-[cC]ookie:.*ucid=/s/[^=]*=\([^;]*\);.*$/\1/p')
HASGMID=$(echo "${HTTP_REQ}" | sed -n -e '/^[sS]et-[cC]ookie:.*has[gG]mid=/s/[^=]*=\([^;]*\);.*$/\1/p')

trace "My GMID: $GMID"
trace "My UCID: $UCID"
trace "My HASGMID: $HASGMID"

#
# call https://login-ra.fiat.com/accounts.webSdkBootstrap
# =======================================================
#

RISKCONTEXT=$( urlencode '{"b0":53295,"b1":[104,68,180,220],"b2":6,"b3":[],"b4":6,"b5":1,"b6":"'"${USERAGENT}"'","b7":[],"b8":"'"${TIME}"':00","b9":-120,"b10":{"state":"prompt"},"b11":false,"b12":{"charging":true,"chargingTime":0,"dischargingTime":null,"level":1},"b13":[null,"1024|728|24",false,true]}' )

trace "RISKCONTEXT: ${RISKCONTEXT}"

HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		-X POST \
		-d "loginID=${LOGIN}" \
		-d "password=${PASSWORD}" \
		-d "sessionExpiration=2628000" \
		-d "targetEnv=jssdk" \
		-d "include=profile%2Cdata%2Cemails%2Csubscriptions%2Cpreferences%2C" \
		-d "includeUserInfo=true" \
		-d "loginMode=standard" \
		-d "lang=fr" \
		-d "riskContext=${RISKCONTEXT}" \
		-d "APIKey=${APIKEY}" \
		-d "source=showScreenSet" \
		-d "sdk=js_latest" \
		-d "authMode=cookie" \
		-d "pageURL=https%3A%2F%2Flogin-ra.fiat.com%2F" \
		-d "sdkBuild=16506" \
		-d "format=json" \
		--cookie "gmid=${GMID}" \
		--cookie "ucid=${UCID}" \
		--cookie "hasGmid=${HASGMID}" \
		'https://login-ra.fiat.com/accounts.login' \
		| \
		sed -e 's/\r$//'
	)

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_accounts_login_response.txt"

GLT=$(echo "${HTTP_REQ}" | sed -n -e '/^[sS]et-[cC]ookie:.*glt_/s/.*\(glt_[^;]*\);.*/\1/p')
LOGIN_TOKEN=$(echo "${GLT}" | sed -n -e 's/[^=]*=//p')

trace "My GLT: $GLT"
trace "My LOGIN_TOKEN: $LOGIN_TOKEN"

#
# call https://login-ra.fiat.com/saml/v2.0/.../continue
# =====================================================
#

HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		--cookie "gmid=${GMID}" \
		--cookie "ucid=${UCID}" \
		--cookie "hasGmid=${HASGMID}" \
		-X GET "https://login-ra.fiat.com/saml/v2.0/${APIKEY}/idp/sso/continue?samlContext=${SAMLCONTEXT}&loginToken=${LOGIN_TOKEN}" \
	    	| \
		sed -e 's/\r$//'
	)

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_continue_response.txt"

while IFS= read -r data
do
        if [[ $data == *"SAMLResponse"* ]]; then
                SAMLRESPONSE=$(echo $data | sed 's/.* name="SAMLResponse" value="\([^"]*\).*$/\1/i')
                SAMLRESPONSE_ENCODED=$(urlencode $SAMLRESPONSE)
                SERVICEBOX_URL=$(echo $data | sed 's/.* method="post" action="\([^"]*\).*$/\1/i')
        fi
done <<< "$HTTP_REQ"

trace "His SAMLRESPONSE: ${SAMLRESPONSE}"
trace "His SERVICEBOX_URL: ${SERVICEBOX_URL}"

SAMLRESPONSE=$(echo "${HTTP_REQ}" | sed -n -e '/name="SAMLResponse"/s/.*name="SAMLResponse"[ \t]*value="\([^"]*\)".*/\1/p' )
SERVICEBOX_URL=$(echo "${HTTP_REQ}" | sed -n -e '/name="SAMLResponse"/s/.*id="selfForm"[ \t]*method="post"[ \t]*action="\([^"]*\)".*/\1/p' )
SAMLRESPONSE_ENCODED=$(urlencode "${SAMLRESPONSE}")

trace "My SAMLRESPONSE: ${SAMLRESPONSE}"
trace "My SERVICEBOX_URL: ${SERVICEBOX_URL}"

#
# final call to SERVICEBOX_URL
# ============================
#


HTTP_REQ=$( curl \
		-s \
		-D - \
		-A "${USERAGENT}" \
		-X POST \
		-d "SAMLResponse=${SAMLRESPONSE_ENCODED}" \
		--cookie "${SET_BIGIPSERVER}" \
		--cookie "${SET_PSA_COUNTRY}" \
 		--cookie "${SET_JSESSIONID}" \
		"${SERVICEBOX_URL}" \
	    	| \
		sed -e 's/\r$//'
	    )

echo "${HTTP_REQ}" > "${TRACE_DIR}/HTTP_REQ_servicebox_url_response.txt"

USERID=$( echo "${HTTP_REQ}" | getHeaderValueFor 'userId' )
SESSIONID=$( echo "${HTTP_REQ}" | getHeaderValueFor 'sessionId' )

#
# generate response
# =================
#

if [[ "${LOGIN_TOKEN}" == "" ]]
then

    #
    # build and error content
    # not yet implemented
    #

    echo 'Status: 500 Internal Server Error'
    echo
    
    trace 'Return code 500'
    exit 0
else

    echo 'SAMLRequest: '"${SAMLREQUEST}"
    echo 'SAMLLogoutRequest: '"${SAMLLOGOUTREQUEST}"
    echo 'gigyaUrl: '"${GIGYAURL}"
    echo "debug_login_token: ${LOGIN_TOKEN}"
    echo 'Status: 302 Redirect'
    echo 'Location: /do/newApvprStart'
    echo "Set-Cookie: ${HTTP_COOKIE}"
    echo 'Cache-control: no-cache, no-store, max-age=0'
    echo 'Pragma: no-cache'
    echo 'userId: '"${USERID}"
    echo 'sessionId: '"${SESSIONID}"
    echo

    trace "Return code 302 with LoginToken: ${LOGIN_TOKEN}"
    exit 0
fi

# NOT REACHED

#
# ============================================
#
# OLD CODE -- **** REST OF FILE NOT USED **** 
#
# NOT REACHED
#

exit 1


query_string_array_init_val=$(

    IFS='&'
    set -- ${QUERY_STRING}
    for i in "$@"
    do
       IFS='='
       set -- $i
       echo "[$1]=$2"
    done

)


eval declare -A query_string_array=( ${query_string_array_init_val} )


echo 'RespHead: ABC'
echo "Set-Cookie: eee=1"
echo
echo '<html>
<head>
<title>HELLO cgi</title>
</head>'

html_log_message "$( date )"
html_log_message '==================================='
html_log_message "$(env)"
html_log_message "Query string array: ${query_string_array[@]}"
html_log_message "${HTTP_COOKIE}"

cat /tmp/zz.log

echo '</span>
</span>
</p>

</body>
</html>
'



exit 0



# IMPORTED OCDE



LOGIN=""
PASSWORD=""
TIME=$(date +"%H:%M")
USERAGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0"

LOGIN_TOKEN=""

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X GET "https://public.servicebox-parts.com/")
while IFS= read -r header
do
    if [[ $header == "Set-Cookie: JSESSIONID"* ]]; then
                JSESSIONID=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1
/i')
        fi
        if [[ $header == "Set-Cookie: BIGipServer"* ]]; then
                BIGIPSERVER=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\
1/i')
        fi
        if [[ $header == "Set-Cookie: PSACountry"* ]]; then
                PSACOUNTRY=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1
/i')
        fi
done <<< "$HTTP_REQ"

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X POST "https://public.servicebox-parts.com/getSamlReq" -H "Cookie: ${JSESSIONID} ${PSACOUNTRY} ${BIGIPSERVER} " -d "")
while IFS= read -r header
do
        if [[ $header == *"gigyaUrl"* ]]; then
                GIGYAURL=$(echo -n $header | sed 's/^gigyaUrl: \(.*\)\r/\1/i')
                APIKEY=$(echo $header | sed 's/.*v2.0\/\([a-zA-Z0-9\-_]*\)\/.*$/\1/i')
        fi
        if [[ $header == *"SAMLRequest"* ]]; then
                SAMLREQUEST=$(echo -n $header | sed 's/^SAMLRequest: \(.*\)\r/\1/i')
                SAMLREQUEST_ENCODED=$(urlencode $SAMLREQUEST)
        fi
done <<< "$HTTP_REQ"

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X GET "${GIGYAURL}?SAMLRequest=${SAMLREQUEST_ENCODED}")
while IFS= read -r header
do
        if [[ $header == *"samlContext="* ]]; then
                SAMLCONTEXT=$(echo -n $header | sed 's/.*samlContext=\([^&]*\).*/\1/i')
        fi
done <<< "$HTTP_REQ"

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X GET "https://login-ra.fiat.com/accounts.webSdkBootstrap?apiKey=${APIKEY}&pageURL=${GIGYAURL}?SAMLRequest=${SAMLREQUEST}&sdk=js_latest&sdkBuild=16506&format=json")
while IFS= read -r header
do
        if [[ $header == *"gmid="* ]]; then
                GMID=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1/i')
        fi
        if [[ $header == *"ucid="* ]]; then
                UCID=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1/i')
        fi
        if [[ $header == *"hasGmid="* ]]; then
                HASGMID=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1/i')
        fi
done <<< "$HTTP_REQ"

RISKCONTEXT=$(urlencode "{\"b0\":53295,\"b1\":[104,68,180,220],\"b2\":6,\"b3\":[],\"b4\":6,\"b5\":1,\"b6\":\"${USERAGENT}\",\"b7\":[],\"b8\":\"${TIME}:
00\",\"b9\":-120,\"b10\":{\"state\":\"prompt\"},\"b11\":false,\"b12\":{\"charging\":true,\"chargingTime\":0,\"dischargingTime\":null,\"level\":1},\"b13
\":[null,\"1024|728|24\",false,true]}")

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X POST "https://login-ra.fiat.com/accounts.login" -d "loginID=${LOGIN}&password=${PASSWORD}&sessionExpiratio
n=2628000&targetEnv=jssdk&include=profile%2Cdata%2Cemails%2Csubscriptions%2Cpreferences%2C&includeUserInfo=true&loginMode=standard&lang=fr&riskContext=
${RISKCONTEXT}&APIKey=${APIKEY}&source=showScreenSet&sdk=js_latest&authMode=cookie&pageURL=https%3A%2F%2Flogin-ra.fiat.com%2F&sdkBuild=16506&format=jso
n" -H "Cookie: ${GMID} ${UCID} ${HASGMID} ")
while IFS= read -r header
do
        if [[ $header == *"glt_"* ]]; then
                GLT=$(echo $header | sed 's/^Set-Cookie: \([^;]*;\).*$/\1/i')
                LOGIN_TOKEN=$(echo $header | sed 's/^Set-Cookie: [^=]*=\([^;]*\);.*$/\1/i')
        fi
done <<< "$HTTP_REQ"

if [[ $LOGIN_TOKEN == "" ]]; then
        echo "Login ERROR"
        exit 1
fi

#---------------------------

HTTP_REQ=$(curl -s -A "${USERAGENT}" -X GET "https://login-ra.fiat.com/saml/v2.0/${APIKEY}/idp/sso/continue?samlContext=${SAMLCONTEXT}&loginToken=${LOGIN_TOKEN}" -H "Cookie: ${GMID} ${UCID} ${HASGMID} ")
while IFS= read -r data
do
        if [[ $data == *"SAMLResponse"* ]]; then
                SAMLRESPONSE=$(echo $data | sed 's/.* name="SAMLResponse" value="\([^"]*\).*$/\1/i')
                SAMLRESPONSE_ENCODED=$(urlencode $SAMLRESPONSE)
                SERVICEBOX_URL=$(echo $data | sed 's/.* method="post" action="\([^"]*\).*$/\1/i')
        fi
done <<< "$HTTP_REQ"

HTTP_REQ=$(curl -s -D - -A "${USERAGENT}" -X POST "${SERVICEBOX_URL}" -d "SAMLResponse=${SAMLRESPONSE_ENCODED}" -H "Cookie: ${JSESSIONID} ${PSACOUNTRY} ${BIGIPSERVER} ")

echo "${JSESSIONID} ${PSACOUNTRY} ${BIGIPSERVER} "





#================================

# Post the SAMLResponse



curl "https://public.servicebox-parts.com/gigyaSSO" -X POST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3" -H "Accept-Encoding: gzip, deflate, br, zstd" -H "Content-Type: application/x-www-form-urlencoded" -H "Origin: https://login-ra.fiat.com" -H "Connection: keep-alive" -H "Referer: https://login-ra.fiat.com/" -H "Cookie: JSESSIONID=7342C39D3B7312A981A7F07E2D1A2145; BIGipServerNEWAPVPROI_HTTPS_OIT.app~NEWAPVPROI_HTTPS_OIT_pool=1854963722.65312.0000; PSACountry=FR; Enabled=true; CodeLanguePaysOI=fr_FR" -H "Upgrade-Insecure-Requests: 1" -H "Sec-Fetch-Dest: document" -H "Sec-Fetch-Mode: navigate" -H "Sec-Fetch-Site: cross-site" -H "Priority: u=0, i" --data-raw "SAMLResponse=PHNhbWxwOlJlc3BvbnNlIElEPSJfNGY4NGJhYjEtOTQxNi00ZGUzLTllMDItNTU5MjQ4Mzk3MjkzIiBJblJlc3BvbnNlVG89IjAxMDYyZWI1LWVmMTctNGE4MS04YTk3LWRlY2ZmMWZjNmE4YSIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTEtMTNUMTc6NTA6MzFaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9wdWJsaWMuc2VydmljZWJveC1wYXJ0cy5jb20vZ2lneWFTU08iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxzYW1sOklzc3VlciB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj5odHRwczovL2ZpZG0uZ2lneWEuY29tL3NhbWwvdjIuMC80X29yRm1VS0gxVHJuUDBrTWYzaHJ5ckE8L3NhbWw6SXNzdWVyPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiAvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2IiAvPjxSZWZlcmVuY2UgVVJJPSIjXzRmODRiYWIxLTk0MTYtNGRlMy05ZTAyLTU1OTI0ODM5NzI5MyI^%^2BPFRyYW5zZm9ybXM^%^2BPFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIiAvPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiIC8^%^2BPC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiIC8^%^2BPERpZ2VzdFZhbHVlPmJRbWhxN3VlZFdhaEg4SlIzbEQzV3lKUEZwem9QUnYrQmJEd0krY1crVjA9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8^%^2BPFNpZ25hdHVyZVZhbHVlPlVhT083TTNwZ3pxUFFVb05qNDlXSU9oNVZ0ZC9jbWlUdjVROUNrN3dmUVhpUllpUW5ZVnFGNS9YMlJUaVExdVc4UzkzSUZvVGlib3VsTERIRzdwL3dlQ1R3WVdaNlZKZE5HWVhqaTB6SzhlU01JMU8xSU9XOHp4SXdlSTQ3OXRWQVBvUmVDeEFFQkZsSlJVWWVSVkFycE82RU5aRFJVWFlqSm1URXQycEtza2N4K1FlWEVBQTRzMjA5SEt6K0RrZ0xldXU1R2FmcmdKTTc4ZnVWbmR1ZjJaQ3c0TnNLbEVYeEh4dlVQaTJVYUk2RFpHVVkvZUZqUHhydXVmM05UdWEzMXJwMkRIdDBadllzWUlBZnU1d1l0NnVJY2VtaG9xMjRXK3lKR25qSm9WYUxIcEZ1UDlkYVRxbHJTUk9MYnRKSTJiQzQ2V29HaHQ1VnlCSFkzZ0cvQT09PC9TaWduYXR1cmVWYWx1ZT48S2V5SW5mbz48WDUwOURhdGE^%^2BPFg1MDlDZXJ0aWZpY2F0ZT5NSUlDNERDQ0FjaWdBd0lCQWdJUU85dXlQblRaRTQ5Rk5kZkpZNkFXNWpBTkJna3Foa2lHOXcwQkFRc0ZBREFyTVNrd0p3WURWUVFERXlCSGFXZDVZU0JUUVUxTUlHWnZjaUJ6YVhSbElETTFNakEyTXpjNU1ESTVOREFnRncweU16QTNNVEF4TURVME1ESmFHQTh5TVRJek1EY3hNREV3TlRRd01sb3dLekVwTUNjR0ExVUVBeE1nUjJsbmVXRWdVMEZOVENCbWIzSWdjMmwwWlNBek5USXdOak0zT1RBeU9UUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdWdCNUxaRW1lMmdTTFA1V2tONE4vSVlKc2xqV1ZPS29YbnN2SVg2azl4WjdXOGJ0dkc1alJxdUtHQ0loMWloS0NEVVlhNW54U3kwL2NUbXhtZ3FzdVBZdVBWc2w3Z0w0cVpKcCs5MldVa2srZE56Qy9mLzhsbTBBVnlTb3Z5WXVlU3JTZmdZRjRxWkNGdzA1Z3VvYS9kRU9PU2g3NE5wM0VsNWJJQTRZV2FpNzdmb0NncnVzQWVlMGpMSFQyaEVWcGpQbG1Ndk5vYlh5NjR5VXhWYS9Sd3RTOXMvZ3draS9UZXUyTTd5SDN5K0hVNytvQTlsQkFuQUNHRUcwbllmeDJKSllnZW9ldzJHek5MUCt1WFJXQzVCM2JaSDl3SHYrMTVXODV2ZjhxVzE0RXRWM3N1WWVnZVJTcUZieUQ2SkEzR3hwejNOU3NPMXdSYU52V0NpZVJBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEcUNSTVAzY3EwMUg0WUtzOUdJRWlkeTRsZ1U2VTdSNWNLVTFHRSt4OXNFNm1hTWpMOHV2YUhIZVAwcnRpSkFkbUxKeGE4NHA3ZVE0SnlYYjI4bGJMSFlSdnIyUHlMZEhsZFpnVWxta3JCRzg5VitNSTBuamtPR1VJQ1c2dUc5ZUFYcURFdWEzVVV2YlhLRFd5VURDSnpZcDY2b3JJWWczWDhtamMzWTN2UCsxZE1hQWc3RHdUMkdJcmE4ejdSOVBhM1NYTHQ2SHpHRXdOdmo5L0N1d2NyWHUxMmRzNVlQU1Baa2NwWkZocmtFNTZCOHNVWGhXN2JmM25xdXR0S2ViYU0vbWRsenY1d3owcE1FcmkzSzVQNllBUW42SCtqc3lyUlRaSU9CNHUzSEhUcllmTnQyU3VoVFlxM1M0bEdzWFBHTURGZno0dlduaXhGMTBUU05NN289PC9YNTA5Q2VydGlmaWNhdGU^%^2BPC9YNTA5RGF0YT48L0tleUluZm8^%^2BPC9TaWduYXR1cmU^%^2BPHNhbWxwOlN0YXR1cz48c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIiAvPjwvc2FtbHA6U3RhdHVzPjxzYW1sOkFzc2VydGlvbiBWZXJzaW9uPSIyLjAiIElEPSJfZmRjODBjZWItZmZlYS00YmIwLWJmYzQtNDkwMzE3OWRlMTE5IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTEtMTNUMTc6NTA6MzFaIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48c2FtbDpJc3N1ZXI^%^2BaHR0cHM6Ly9maWRtLmdpZ3lhLmNvbS9zYW1sL3YyLjAvNF9vckZtVUtIMVRyblAwa01mM2hyeXJBPC9zYW1sOklzc3Vlcj48U2lnbmF0dXJlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgLz48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIgLz48UmVmZXJlbmNlIFVSST0iI19mZGM4MGNlYi1mZmVhLTRiYjAtYmZjNC00OTAzMTc5ZGUxMTkiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIgLz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiAvPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2IiAvPjxEaWdlc3RWYWx1ZT5VK1pnUEh3TjlxblMzcVhRWW9IUnZGcDNlUlFtald3SUNLTnBmNnFSVlVFPTwvRGlnZXN0VmFsdWU^%^2BPC9SZWZlcmVuY2U^%^2BPC9TaWduZWRJbmZvPjxTaWduYXR1cmVWYWx1ZT5mRzErZFpsazNZSWlMOThtNmppL3pEbmN5ZGhleVgwdFVwenBBaWJZZXhtQkcxODhtQThMM2J5bU5LMG1yS2wxZmJGNVZaRGN3R0V3dHlxaWk4dDM4ZHk2YnRLRVJWRVNPNU95Tm9XY2ZGb3lUT1U4U2FSbzk1Qi9nYjhFTDJpME1MZFR2Zm5HWkZtSUNjbDM1U01PbXFON1V2eEs5d2IwTVVVaWRBSEEybjVMeXNVbTZ6T2RhKzBWUE9ONXBVTStYMmNZZGU5N0xwdnVkdGZiVXhySlRKc2xJNzFKem55dHZRS0pRaE96djdYd1VpNjVhTEtwVGhvdWtPMTlxNmZoYllrY1haVzZuMXZYRlJ3NEpYM25jTGhJSnR5c2tHakU3eXdObEdiQ3U2QVJLQzdGdmhuZXBsUVBVZDh1cFk1b1haZEVFbUlCdW5MbXZYeU9mNzUvYUE9PTwvU2lnbmF0dXJlVmFsdWU^%^2BPEtleUluZm8^%^2BPFg1MDlEYXRhPjxYNTA5Q2VydGlmaWNhdGU^%^2BTUlJQzREQ0NBY2lnQXdJQkFnSVFPOXV5UG5UWkU0OUZOZGZKWTZBVzVqQU5CZ2txaGtpRzl3MEJBUXNGQURBck1Ta3dKd1lEVlFRREV5QkhhV2Q1WVNCVFFVMU1JR1p2Y2lCemFYUmxJRE0xTWpBMk16YzVNREk1TkRBZ0Z3MHlNekEzTVRBeE1EVTBNREphR0E4eU1USXpNRGN4TURFd05UUXdNbG93S3pFcE1DY0dBMVVFQXhNZ1IybG5lV0VnVTBGTlRDQm1iM0lnYzJsMFpTQXpOVEl3TmpNM09UQXlPVFF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3VnQjVMWkVtZTJnU0xQNVdrTjROL0lZSnNsaldWT0tvWG5zdklYNms5eFo3VzhidHZHNWpScXVLR0NJaDFpaEtDRFVZYTVueFN5MC9jVG14bWdxc3VQWXVQVnNsN2dMNHFaSnArOTJXVWtrK2ROekMvZi84bG0wQVZ5U292eVl1ZVNyU2ZnWUY0cVpDRncwNWd1b2EvZEVPT1NoNzROcDNFbDViSUE0WVdhaTc3Zm9DZ3J1c0FlZTBqTEhUMmhFVnBqUGxtTXZOb2JYeTY0eVV4VmEvUnd0UzlzL2d3a2kvVGV1Mk03eUgzeStIVTcrb0E5bEJBbkFDR0VHMG5ZZngySkpZZ2VvZXcyR3pOTFArdVhSV0M1QjNiWkg5d0h2KzE1Vzg1dmY4cVcxNEV0VjNzdVllZ2VSU3FGYnlENkpBM0d4cHozTlNzTzF3UmFOdldDaWVSQWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRHFDUk1QM2NxMDFINFlLczlHSUVpZHk0bGdVNlU3UjVjS1UxR0UreDlzRTZtYU1qTDh1dmFISGVQMHJ0aUpBZG1MSnhhODRwN2VRNEp5WGIyOGxiTEhZUnZyMlB5TGRIbGRaZ1VsbWtyQkc4OVYrTUkwbmprT0dVSUNXNnVHOWVBWHFERXVhM1VVdmJYS0RXeVVEQ0p6WXA2Nm9ySVlnM1g4bWpjM1kzdlArMWRNYUFnN0R3VDJHSXJhOHo3UjlQYTNTWEx0Nkh6R0V3TnZqOS9DdXdjclh1MTJkczVZUFNQWmtjcFpGaHJrRTU2QjhzVVhoVzdiZjNucXV0dEtlYmFNL21kbHp2NXd6MHBNRXJpM0s1UDZZQVFuNkgranN5clJUWklPQjR1M0hIVHJZZk50MlN1aFRZcTNTNGxHc1hQR01ERmZ6NHZXbml4RjEwVFNOTTdvPTwvWDUwOUNlcnRpZmljYXRlPjwvWDUwOURhdGE^%^2BPC9LZXlJbmZvPjwvU2lnbmF0dXJlPjxzYW1sOlN1YmplY3Q^%^2BPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4xOm5hbWVpZC1mb3JtYXQ6dW5zcGVjaWZpZWQiPlZSQnR5bVl6VDdzPTwvc2FtbDpOYW1lSUQ^%^2BPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPjxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIE5vdE9uT3JBZnRlcj0iMjAyNC0xMS0xM1QxNzo1MTozMVoiIFJlY2lwaWVudD0iaHR0cHM6Ly9wdWJsaWMuc2VydmljZWJveC1wYXJ0cy5jb20vZ2lneWFTU08iIEluUmVzcG9uc2VUbz0iMDEwNjJlYjUtZWYxNy00YTgxLThhOTctZGVjZmYxZmM2YThhIiAvPjwvc2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTExLTEzVDE3OjQ5OjMxWiIgTm90T25PckFmdGVyPSIyMDI0LTExLTEzVDE3OjUxOjMxWiI^%^2BPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj48c2FtbDpBdWRpZW5jZT5odHRwczovL3B1YmxpYy5zZXJ2aWNlYm94LXBhcnRzLmNvbS9zc288L3NhbWw6QXVkaWVuY2U^%^2BPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24^%^2BPC9zYW1sOkNvbmRpdGlvbnM^%^2BPHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDI0LTExLTEzVDE3OjUwOjMxWiIgU2Vzc2lvbkluZGV4PSIzNDkyMzczNjAzIiBTZXNzaW9uTm90T25PckFmdGVyPSIyMDI0LTExLTE0VDE3OjUwOjMxWiI^%^2BPHNhbWw6QXV0aG5Db250ZXh0PjxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOnVuc3BlY2lmaWVkPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPjwvc2FtbDpBdXRobkNvbnRleHQ^%^2BPC9zYW1sOkF1dGhuU3RhdGVtZW50PjxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD48c2FtbDpBdHRyaWJ1dGUgTmFtZT0ibG9jYXRpb25Db3VudHJ5IiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVuc3BlY2lmaWVkIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5GUjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJsb2NhbGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dW5zcGVjaWZpZWQiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPmZyPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU^%^2BPHNhbWw6QXR0cmlidXRlIE5hbWU9Imxhc3ROYW1lIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVuc3BlY2lmaWVkIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5Wb2lzaW48L3NhbWw6QXR0cmlidXRlVmFsdWU^%^2BPC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlyc3ROYW1lIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVuc3BlY2lmaWVkIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5OaWNvbGFzPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU^%^2BPHNhbWw6QXR0cmlidXRlIE5hbWU9InVzZXJuYW1lIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVuc3BlY2lmaWVkIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5BU1NPQ0lBVElPTjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJlbWFpbCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1bnNwZWNpZmllZCI^%^2BPHNhbWw6QXR0cmlidXRlVmFsdWU^%^2BbnYxNDAwMEBsaXZlLmZyPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU^%^2BPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD48L3NhbWw6QXNzZXJ0aW9uPjwvc2FtbHA6UmVzcG9uc2U^%^2B"
